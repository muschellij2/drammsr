
  Section of Biomedical Image Analysis
  Department of Radiology
  University of Pennsylvania
  3600 Market Street, Suite 380
  Philadelphia, PA 19104

  Web:   https://www.rad.upenn.edu/sbia/
  Email: sbia-software at uphs.upenn.edu

  Copyright (c) 2011--2014 University of Pennsylvania. All rights reserved.
  See http://www.rad.upenn.edu/sbia/software/license.html or COPYING file.



INTRODUCTION
============

  This document contains the build and installation instructions.

  For general build and installation instructions which apply to any software
  developed on top of the SBIA Build system And Software Implementation
  Standard (BASIS) [1], please refer to the respective how-to guide of the
  BASIS documentation [2].



OBTAINING A COPY OF THE SOFTWARE
================================

  Please see the corresponding section of the BASIS how-to guide [2].



INSTALLING A BINARY DISTRIBUTION PACKAGE
========================================

  Please see the corresponding section of the BASIS how-to guide [2].



RUNTIME REQUIREMENTS
====================

  - FMRIB Software Library (FSL) 4.0

    Web:      http://www.fmrib.ox.ac.uk/fsl/
    Download: http://www.fmrib.ox.ac.uk/fsl/fsl/downloading.html
    Ubuntu:   fsl

    The input images to the deformable registration implemented by DRAMMS
    have to be affinely coregistered. Therefore, the dramms command optionally
    (-a option) makes use of FSL's FLIRT command to do so. Thus, if the
    input images to DRAMMS are not already affinely registered and the -a option
    of dramms is used, FSL has to be installed on your system.



BUILDING THE SOFTWARE FROM SOURCES
==================================

  In the following, only the additional build dependencies and CMake settings
  available to configure this software package are summarized. For a list of
  general build dependencies and step-by-step instructions on how to use CMake
  and GNU Make to build and install the software, please refer to the
  corresponding section of the BASIS how-to guide [2].


  Bundle Build
  ------------

  For the convenient build of this software together with its prerequisites,
  a CMake configuration file which uses CMake's ExternalProject command in
  order to download, configure, build, and install the prerequisites, and then
  this software can be found in the build/ directory of the source distribution
  package.

  Note: This bundle build may require an internet connection if not all required
        packages are included in the build/ directory to be able to download the
        source packages of the prerequisites.

  The steps for building the entire bundle of this software package are:

  1. Change into the build/ directory of the source package:

     $ cd dramms-$version-source/build

  2. Run CMake to configure the build:

     $ ccmake .

     In particular, configure the CMAKE_INSTALL_PREFIX where the software and
     its prerequisites should be installed.

  3. Build and install the software and its prerequisite libraries:

     $ make

     Note that if the CMAKE_INSTALL_PREFIX is only writable by the super user,
     you need to run GNU Make either as root user or with sudo.

  4. Remove all temporary source and build files from build/ directory (optional):

     $ make clean


  Build Dependencies
  ------------------

  The following software has to be installed (if not optional).

  - BASIS >= 2.1

    Web Site: http://www.rad.upenn.edu/sbia/software/basis/
    Download: http://www.rad.upenn.edu/sbia/software/distributions/basis-current-source.tar.gz

    This project is based on BASIS, a meta-project developed at SBIA to
    standardize and simplify the software development.

  - nifticlib 2.0 or greater

    Web:      http://niftilib.sourceforge.net/
    Download: http://sourceforge.net/projects/niftilib/files/nifticlib/
    Ubuntu:   nifticlib (maverick)

  - FastPD (patched)

    Web:      http://www.csd.uoc.gr/~komod/FastPD/
    Download: http://www.csd.uoc.gr/~komod/FastPD/ (registration required)

    The original FastPD implementation from Drs. Nikos Komodakis and Nikos Paragios
    has to be patched before it can be used by DRAMMS. Therefore, execute the following
    commands on Unix in order to build the modified version of FastPD.

    $ unzip FastPD_DemoVersion.zip -d dramms-fastpd
    $ patch -d dramms-fastpd -p1 < dramms-$version-source/build/FastPD.patch
    $ cd dramms-fastpd
    $ cmake -DCMAKE_BUILD_TYPE:STRING=Release .
    $ make


  Build Steps
  -----------

  The common steps to build, test, and install software based on CMake,
  including this software, are as follows:

  1. Extract source files.
  2. Create build directory and change to it.
  3. Run CMake to configure the build tree.
  4. Build the software using selected build tool.
  5. Test the built software.
  6. Install the built files.

  On Unix-like systems with GNU Make as build tool, these build steps can be
  summarized by the following sequence of commands executed in a shell,
  where $package and $version are shell variables which represent the name
  of this package and the obtained version of the software.

  $ tar xzf $package-$version-source.tar.gz
  $ mkdir $package-$version-build
  $ cd $package-$version-build
  $ ccmake ../$package-$version-source

    - Press 'c' to configure the build system and 'e' to ignore warnings.
    - Set INSTALL_PREFIX and other CMake variables and options.
    - Continue pressing 'c' until the option 'g' is available.
    - Then press 'g' to generate the configuration files for GNU Make.

  $ make
  $ make test    (optional)
  $ make install (optional)

  An exhaustive list of minimum build dependencies, including the build tools
  along detailed step-by-step build, test, and installation instructions can
  be found in the corresponding "Building the Software from Sources" section
  of the BASIS how-to guide on software installation [2].

  Please refer to this guide first if you are uncertain about above steps or
  have problems to build, test, or install the software on your system.
  If this guide does not help you resolve the issue, please contact us at
  <sbia-software at uphs.upenn.edu>. In case of failing tests, please attach
  the output of the following command to your email:
 
  $ ctest -V &> test.log

  In the following, only package-specific CMake settings available to
  configure the build and installation of this software are documented.


  CMake Options
  -------------

  DRAMMSFastPD_DIR    Directory containing the DRAMMSFastPDConfig.cmake file, which
                      is located in the build directory of the patched FastPD build.


  Advanced CMake Options
  ----------------------

  (no additional advanced CMake options considered by this package)



REFERENCES
==========

  [1] http://www.rad.upenn.edu/sbia/software/basis/

  [2] http://www.rad.upenn.edu/sbia/software/basis/howto/install.html
