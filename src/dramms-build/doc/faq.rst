.. raw:: html

   <!--

   ============================================================================

      DO NOT EDIT THIS FILE! It was generated using Sphinx from:

      Origin:   $URL: https://sbia-svn.uphs.upenn.edu/projects/DRAMMS/branches/dramms-1.4/doc/faq.rst $
      Revision: $Rev: 2259 $

   ============================================================================

   -->

.. title:: FAQ

.. meta::
   :description: Frequently asked questions about DRAMMS usage.
   :keywords: DRAMMS FAQ, DRAMMS Parameter Setting, DRAMMS Parameter Tuning, DRAMMS Development.
   
   
.. Page break after table of contents in LaTeX/PDF output.
.. raw:: latex

    \pagebreak
	
	
Frequently Asked Questions
==========================

:ref:`Q1. Which parameters shall I tune first to get different registration results? <q1>`

:ref:`Q2. How to re-direct or save all intermediate results? <q2>`

:ref:`Q3. How to display more detail about registration process and save it into log files? <q3>`

:ref:`Q4. How to reserve the memory for the dramms command? <q4>`

:ref:`Q5. How to reduce the memory use, and/or the running time? <q5>`

:ref:`Q6  How to visualize a deformation field? <q6>`

:ref:`Q7. Can DRAMMS do 2D-to-3D registration? 4D registration? or group-wise registration? <q7>`

:ref:`Q8. Can DRAMMS do multi-modality registration? <q8>`

:ref:`Q9. Can DRAMMS take an initial transformation (Can the user initialize the transformation)? <q9>`

:ref:`Q10. Can DRAMMS do linear (affine or rigid) registration only? <q10>`

:ref:`Q11. Can DRAMMS take an input mask (Can DRAMMS only register images within certain regions)? <q11>`

:ref:`Q12. Can I develop new algorithms based on the DRAMMS framework? <q12>`



.. _q1:

Q.1 Which parameters shall I tune first to get different registration results?
------------------------------------------------------------------------------

 If you find the obtained deformation or the registered images too smooth or too aggressive (curly), you can set lower or higher smoothness weight through the ``-g`` option of ``dramms``. The ``-g`` option inputs a scaler that weights smoothness/regularization relative to the similarity. That is, the similarity is always weighted by 1, and the regularization (for which we use bending energy of the FFD model) is first normalized to match up with the scale/range of the similarity term, and then weighted by the value input by the ``-g`` option. Usually ``-g`` value is between 0 and 1, with bigger values corresponding to smoother and hence often less accurate deformation. It can go to a bigger positive number like ``-g 2`` for really really smooth deformation, but this is seldom used. An extreme is that if you use ``-g 5`` ``-g 10`` or so on, you will get almost purely affine registration. The default ``-g`` value is 0.2 for all cases, except in RAVENS calculation, where the default is 0.3 (a little smoother). Our experience is to use the default, look at the registered image and deformation, then if smoother deformation is needed, we can try ``-g 0.4``, ``-g 0.6``, etc.

 If you find that the obtained deformation is not large enough to cover the large structural variations (may be seen in registering brains with skull, or registering longitudinal images of large structure changes), you can enlarge the search ranges by setting bigger values of control point spacing via the ``-x``, ``-y`` and ``-z`` options.

 Some images are so different that even the affine registration between them may fail. Typical examples include histology-to-MRI registration, prostate/cardiac image registration of different subjects when all surrounding non-prostate/non-cardiac structures are present and FOVs are different. In these situations, the failure in the affine part within DRAMMS, which is taken care of by the FLIRT tool in the FSL toolbox, will spread to the subsequent deformable part of DRAMMS. In this case, the suggestion is to carefully re-do the affine registration, separately and outside the DRAMMS framework. When a reasonable affine registration result is obtained, we can input the affinely registered images (src2trg_affine.nii.gz and trg.nii.gz) into DRAMMS, and skip the affine part within DRAMMS (by setting ``-a 0`` option).

 Please use ``dramms --help`` in the command window to display a complete list of all available parameters.
 

.. _q2:

Q.2 How to re-direct or save all intermediate results?
------------------------------------------------------------------

 During runtime, ``dramms`` generates and *temporarily* saves all intermediate results into an unique and automatically-generated sub-directory, which is under the directory where dramms is launched. The intermediate results include Gabor attribute images, results before and after registration in each image resolution.
 
 If you want the run-time intermediate results to be re-directed (temporarily saved) to another directory other than the directory where dramms is launched, you can use the ``-I <your_preferred_dir>`` option at the end of the ``dramms`` main command.
 
 No matter where they are temporarily saved, the run-time intermediate results will be automatically deleted in the default settings right after ``dramms`` finishes. If you want rather keep them for further analysis, you can do so by adding the ``-i`` option at the end of the ``dramms`` command.


.. _q3:

Q.3 How to display more detail about registration process and save it into log files?
--------------------------------------------------------------------------------------

 Running ``dramms`` with ``-v -v`` at the end will display the detailed process. If you want to save all printout into a log file, use ``-v -v ${log_file}``.
 

.. _q4:

Q.4 How to reserve the memory for the dramms command?
--------------------------------------------------------

 If you are running ``dramms`` in a personal computer, you don't need to reserve the memory. The ``dramms`` command will have access to up to the maximum memory in your computer.
 
 If you are submitting the ``dramms`` command via `SGE <http://en.wikipedia.org/wiki/Sun_Grid_Engine>`_ to high-performance-computing servers, you can reserve memory via adding the ``-l h_vmem=NG`` option to ``qsub`` (just replace *N* with the number of GB you want to reserve).
		 
.. _q5:

Q.5 How to reduce the memory use, and/or the running time?
-------------------------------------------------------------

 The ``-u`` option of ``dramms`` allows users to use different levels of memory consumptions (1---1/4 of the maximum memory used). Four levels are provided -- from level 3, the default level, which uses the biggest amount of memory for the highest registration accuracy (the actual amount can be found :ref:`here <SystemRequirements>`), to level 2, level 1, and level 0, which uses the smallest amount of memory for a reasonable registration accuracy.

 To reduce the running time, one can use fewer iterations (the ``-k`` option, default 10), use fewer discrete samples during the optimization (the ``-n`` option, default 5), and use a higher weight for the deformation smoothness (set the ``-g`` option greater than 0.5). 

 Please note, using less memory and less running time may lead to a slight decrease in the registration accuracy.


.. _q6:
 
Q.6  How to visualize a deformation field?
----------------------------------------------

 The deformation field generated by DRAMMS has a different format from the standard ITK format. Therefore, visualization tools for standard ITK-format deformation files may not work well for visualizing DRAMMS-generated deformation fields. 

 Currently we are working on a user-friendly tool for DRAMMS deformation visualization. 

 Before it's done, two options can be used to indirectly visualize DRAMMS deformation files. One option is to open the file using MRICroN. MRICroN will ask which component of the file to look at. Generally a DRAMMS deformation file has 3 components, corresponding to displacement values in x, y, z directions, respectively. So for instance, when you open the first component, you will see an image, where the value at each voxel is the displacement of this voxel along the x direction. The second option is to calculate the Jacobian Determinant of the DRAMMS deformation field (see :ref:`JacobianCalculation` for instruction). The resultant Jacobian Determinant map encodes volumetric change ratio at each voxel (>1 for expansion, =1 for volume preservation, <1 for contraction, <0 for self-folding). It is a 3D scalar image in Nifti format, which can be open by many medical imaging tools such as MRICro(N), FSL, AFNI, Slicer, MIPAV, ITK-SNAP, etc.


.. _q7:

Q.7  Can DRAMMS do 2D-to-3D registration? 4D registration? or group-wise registration?
----------------------------------------------------------------------------------------

 2D-to-3D registration --- No. 

 4D longitudinal (or spatial-temporal) registration --- Yes. A script to use DRAMMS to do 4D longitudinal registration can be found at the `4D-DRAMMS@NITRIC webpage <https://www.nitrc.org/projects/dramms4d/>`__. The script runs in a SGE cluster, a PBS cluster, or a single machine.

 Group-wise registration --- Yes. Unbiased group-wise DRAMMS registration is avaiable for unbiased atlas construction. Moreover, a unique feature is that, the group-wise DRAMMS can contruct normal-appearing atlases not only form a normative cohort, but also from a pathology-bearing cohort. The unbiased group-wise DRAMMS (pop-dramms) can be found at the `pop-DRAMMS@NITRC webpage <https://www.nitrc.org/projects/popdramms/>`__. The script runs in a SGE cluster, a PBS cluster, or a single machine.




.. _q8:

Q.8 Can DRAMMS do multi-modality registration?
-----------------------------------------------

 Yes, dramms supports two similarity measures --- the sum of square difference (SSD) and the correlation coefficient (CC) of the texture attributes between two images. The former is default, while the latter is appropriate for multi-modality registration. The latter will be used when you call dramms with the option ``-w 1`` at the end::
 
    dramms -S  subj_modalA.nii.gz  -T  subj_modalB.nii.gz
           -O  subj_modalA2B.nii.gz
           -D  def_modalA2B.nii.gz
           -w  1

 The above is deformable multi-modal registration. Sometimes, you might just want to do linear (rigid or affine) multi-modal registration. Then you might want to look at argument ``-a``. For example: rigid multi-modal registration only::

    dramms -S  subj_modalA.nii.gz  -T  subj_modalB.nii.gz
           -O  subj_modalA2B.nii.gz
           -D  transform_modalA2B.mat
           -a  4

 Or, if you want to do affine multi-modal registration only::

    dramms -S  subj_modalA.nii.gz  -T  subj_modalB.nii.gz
           -O  subj_modalA2B.nii.gz
           -D  transform_modalA2B.mat
           -a  2

 Pay attention that ``-D`` argument now is followed by a mat file (FSL's 4x4 linear transformation matrix).

 
.. _q9:

Q.9 Can DRAMMS take an initial transformation (Can the user initialize the transformation)?
-------------------------------------------------------------------------------------------

 Yes, users can initialize the transformation using the ``-d`` option in the main dramms command. This option accepts an initial affine matrix, or an initial deformation. But please note, if it is an initial affine matrix, the matrix file should be in the FSL flirt's convention, and should have the .mat extension; if it is an initial deformation, the initial deformation must be in the DRAMMS deformation format, with .nii.gz/.nii/.hdr/.img extension. ::
 
    dramms -S  subj.nii.gz  -T  temp.nii.gz
           -O  registered_image.nii.gz
           -D  deformation.nii.gz
           -d  init_affine_matrix.mat        # to accept an inital affine matrix

 or ::
   
    dramms -S  subj.nii.gz  -T  temp.nii.gz
           -O  registered_image.nii.gz
           -D  deformation.nii.gz
           -d  init_deformation.nii.gz       # to accept an inital deformation


.. _q10:

Q.10 Can DRAMMS do linear (affine or rigid) registration only?
----------------------------------------------------------------

 Yes. Please look at the ``-a`` argument. ``-a 0`` is deformable only (no affine or rigid); ``-a 1`` is affine followed by deformable; ``-a 2`` is affine only; ``-a 3`` is rigid followed by deformable; ``-a 4`` is rigid only.  

 So, if you only want to do affine::

    dramms -S  A.nii.gz  -T  B.nii.gz
           -O  A2B_affine.nii.gz
           -D  transform_A2B.mat
           -a  2

 and, if you want to do rigid only::

    dramms -S  A.nii.gz  -T  B.nii.gz
           -O  A2B_rigid.nii.gz
           -D  transform_A2B.mat
           -a  4

 Pay attention that the ``-D`` argument is now followed by a mat file (FSL's 4x4 linear transformation).


.. _q11:

Q.11 Can DRAMMS take an input mask (Can DRAMMS only register images within certain regions)?
---------------------------------------------------------------------------------------------

 Yes. DRAMMS supports the "cost-function-masking" approach through the ``--bs`` or the ``--bt`` option in the main dramms command. This allows the users to register images only within certain regions specified by an input mask. In other words, when an input mask is given, DRAMMS will only register the foreground regions in the mask (regions in which the values in the mask are positive) while ignoring anything in the background regions in the mask (regions with 0 values in the mask). 
 
 The input mask can be in the target image space. The usage is as follows: ::
 
    dramms -S   subj.nii.gz  
           -T   temp.nii.gz
           -O   registered_image.nii.gz
           -D   deformation.nii.gz
           --bt input_mask.nii.gz

 Or, the input mask can be in the source image space. The usage is as follows: ::
 
    dramms -S   subj.nii.gz  
           -T   temp.nii.gz
           -O   registered_image.nii.gz
           -D   deformation.nii.gz
           --bs input_mask.nii.gz


		   
		   
.. _q12:

Q.12 Can I develop new algorithms based on the DRAMMS framework?
-----------------------------------------------------------------
 
 Yes, but for non-commercial purpose only. DRAMMS is open source and is a general framework where each of its building components can be easily changed. 
 
 In the current implementation, we describe each voxel by Gabor texture attributes. We match voxels by minimizing their squared differences between their Gabor attributes. Further, we modulate this matching process by mutual-saliency weighting at each voxel pair based on the matching reliability. 
 
 These three major components can be changed in the DRAMMS framework. For example, developers can try different attribute descriptors other than Gabor features; can try a different voxel (dis)similarity definition other than the squared difference of attributes; and can try a different voxel-wise weighting scheme (or even equal weighting) other than the mutual-saliency weighting. To change them, developers need to change ``CalculateGaborTextures.cxx`` and ``Deform3D.cxx`` programs under the ``src/tools/`` directory in the downloaded software package.
 
 
 
.. Start a new page in LaTeX/PDF output after the changes.
.. raw:: latex

    \clearpage
