/**
 * @file  test_ExecutableTargetInfo.cxx
 * @brief Test ExecutableTargetInfo.cxx module.
 *
 * Copyright (c) 2011 University of Pennsylvania. All rights reserved.<br />
 * See http://www.rad.upenn.edu/sbia/software/license.html or COPYING file.
 *
 * Contact: SBIA Group <sbia-software at uphs.upenn.edu>
 */

#include <basis/test.h>

#include <utilitiestest/basis.h>


using namespace utilitiestest;
using namespace std;


// ---------------------------------------------------------------------------
// targetuid()
TEST(ExecutableTargetInfo, targetuid)
{
    EXPECT_STREQ("basisproject", targetuid("basisproject").c_str())
        << "wrong referenced target of other project modified";
    EXPECT_STREQ("unknown", targetuid("unknown").c_str())
        << "unknown target modified";
    EXPECT_STREQ(targetuid("helloworld").c_str(), targetuid("utilitiestest.helloworld").c_str ())
        << "using either target name or target UID does not give the same for own executable";
    EXPECT_STREQ("basis.basisproject", targetuid("basis.basisproject").c_str())
        << "UID changed";
    EXPECT_STREQ("utilitiestest.helloworld", targetuid("utilitiestest.helloworld").c_str())
        << "UID changed";
    EXPECT_STREQ(".hello", targetuid(".hello").c_str())
        << "namespace prepended even though global namespace specified";
    EXPECT_STREQ("", targetuid("").c_str())
        << "empty string resulted in non-empty string";
}

// ---------------------------------------------------------------------------
// istarget()
TEST(ExecutableTargetInfo, istarget)
{
    EXPECT_FALSE(istarget("basisproject"))
        << "basisproject is part of UtilitiesTest though it should not";
    EXPECT_TRUE(istarget("basis.basisproject"))
        << "basis.basisproject is not a known target";
    EXPECT_FALSE(istarget(""))
        << "empty target string is not identified as unknown target";
    EXPECT_FALSE(istarget("hammer.hammer"))
        << "some unknown target";
}

// ---------------------------------------------------------------------------
// exename()
TEST(ExecutableTargetInfo, exename)
{
#if WINDOWS
    EXPECT_STREQ("basisproject.cmd", exename("basis.basisproject").c_str())
#else
    EXPECT_STREQ("basisproject", exename("basis.basisproject").c_str())
#endif
        << "name of basis.basisproject executable is not basisproject(.cmd)";
}
