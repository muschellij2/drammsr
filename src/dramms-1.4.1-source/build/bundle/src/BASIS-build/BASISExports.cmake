# Generated by CMake 3.0.2

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.5)
   message(FATAL_ERROR "CMake >= 2.6.0 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 2.6)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_targetsDefined)
set(_targetsNotDefined)
set(_expectedTargets)
foreach(_expectedTarget basis.utilities_cxx basis.basis basis.testlib basis.testmain basis.testdriver)
  list(APPEND _expectedTargets ${_expectedTarget})
  if(NOT TARGET ${_expectedTarget})
    list(APPEND _targetsNotDefined ${_expectedTarget})
  endif()
  if(TARGET ${_expectedTarget})
    list(APPEND _targetsDefined ${_expectedTarget})
  endif()
endforeach()
if("${_targetsDefined}" STREQUAL "${_expectedTargets}")
  set(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT "${_targetsDefined}" STREQUAL "")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_targetsDefined}\nTargets not yet defined: ${_targetsNotDefined}\n")
endif()
unset(_targetsDefined)
unset(_targetsNotDefined)
unset(_expectedTargets)


# Create imported target basis.utilities_cxx
add_library(basis.utilities_cxx STATIC IMPORTED)

# Create imported target basis.basis
add_library(basis.basis STATIC IMPORTED)

# Create imported target basis.testlib
add_library(basis.testlib STATIC IMPORTED)

# Create imported target basis.testmain
add_library(basis.testmain STATIC IMPORTED)

# Create imported target basis.testdriver
add_executable(basis.testdriver IMPORTED)

# Import target "basis.utilities_cxx" for configuration "Release"
set_property(TARGET basis.utilities_cxx APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(basis.utilities_cxx PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "CXX"
  IMPORTED_LOCATION_RELEASE "/Users/johnmuschelli/Dropbox/Packages/drammsr/src/dramms-1.4.1-source/build/bundle/src/BASIS-build/lib/libutilities.a"
  )

# Import target "basis.basis" for configuration "Release"
set_property(TARGET basis.basis APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(basis.basis PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "CXX"
  IMPORTED_LINK_INTERFACE_LIBRARIES_RELEASE "basis.utilities_cxx"
  IMPORTED_LOCATION_RELEASE "/Users/johnmuschelli/Dropbox/Packages/drammsr/src/dramms-1.4.1-source/build/bundle/src/BASIS-build/lib/libbasis.a"
  )

# Import target "basis.testlib" for configuration "Release"
set_property(TARGET basis.testlib APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(basis.testlib PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "CXX"
  IMPORTED_LINK_INTERFACE_LIBRARIES_RELEASE "basis.utilities_cxx;basis.basis"
  IMPORTED_LOCATION_RELEASE "/Users/johnmuschelli/Dropbox/Packages/drammsr/src/dramms-1.4.1-source/build/bundle/src/BASIS-build/lib/libtest.a"
  )

# Import target "basis.testmain" for configuration "Release"
set_property(TARGET basis.testmain APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(basis.testmain PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "CXX"
  IMPORTED_LINK_INTERFACE_LIBRARIES_RELEASE "basis.utilities_cxx;basis.basis;basis.testlib"
  IMPORTED_LOCATION_RELEASE "/Users/johnmuschelli/Dropbox/Packages/drammsr/src/dramms-1.4.1-source/build/bundle/src/BASIS-build/lib/libtestmain.a"
  )

# Import target "basis.testdriver" for configuration "Release"
set_property(TARGET basis.testdriver APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(basis.testdriver PROPERTIES
  IMPORTED_LOCATION_RELEASE "/Users/johnmuschelli/Dropbox/Packages/drammsr/src/dramms-1.4.1-source/build/bundle/src/BASIS-build/lib/testdriver"
  )

# This file does not depend on other imported targets which have
# been exported from the same project but in a separate export set.

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)
