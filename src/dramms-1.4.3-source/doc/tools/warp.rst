.. raw:: html

   <!--

   ============================================================================

      DO NOT EDIT THIS FILE! It was generated using Sphinx from:

      Origin:   $URL: https://sbia-svn.uphs.upenn.edu/projects/DRAMMS/branches/dramms-1.4/doc/tools/warp.rst $
      Revision: $Rev: 1951 $

   ============================================================================

   -->

.. title:: Warp Images by DRAMMS Deformations


.. raw:: latex

    \pagebreak


Warp Images
===========

As described below, there are two ways to warp an image --- a stand-alone command, or as part of the main ``dramms`` script. 

Please be aware that, dramms software package supports the warping of a 3D image by a 3D deformation, it also supports the warping of a 4D image by a 3D deformation. The former is more common. The latter is not uncommon especially when dealing with time series images such as in fMRI analysis. In the latter case, the same 3D deformation is applied to each of the 3D block in the input 4D image, and outputs a 4D warped image. The following two options can both serve the purpose of warping 3D or 4D images.

Option 1: using a stand-alone command
--------------------------------------

The first option is via a stand-alone command named ``dramms-warp``, which warps an input image from source
image space to target image space, using the deformation obtained when registering source to target.
We recommend this option if you have already obtained a deformation.

For trilinear interpolation::

    dramms-warp inputImage.hdr def.nii.gz warpedImage.img


For nearest neighbor interpolation::

    dramms-warp inputImage.hdr def.nii.gz warpedImage.img -n


.. note::
    
	1. The warped image resides in the target image space;
	
	2. The warped image inherits the same datatype of the source image. So, if the input source image is float datatype, the warped image also has a datatype of float.

	
.. raw:: html

    <br />

Option 2: using the main `dramms` command
-------------------------------------------

The second option is suitable if you don't have a deformation yet, but want to warp another image
in the source image space to the target space during (or more precisely, right after) registration.
This is often the case in the atlas-based segmentation or in the structure-based functional mapping.

In this case, use the ``-W`` option of ``dramms``::

    dramms -S A.hdr        -T B.hdr 
           -O A2B.hdr      -D def.nii.gz 
           -L Alabel.hdr   -W Alabel_warped_to_B.hdr  -r 0


In the above example, the ``dramms`` command calculates the deformation from image ``A`` to image ``B``; and
then uses the obtained deformation to warp the image ``Alabel`` (usually ROI labels or a functional image) from ``A`` space
into ``B`` space, using nearest-neighbor interpolation (``-r 0``). For trilinear interpolation, use ``-r 1`` instead.
