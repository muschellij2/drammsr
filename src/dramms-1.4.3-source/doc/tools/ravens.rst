.. raw:: html

   <!--

   ============================================================================

      DO NOT EDIT THIS FILE! It was generated using Sphinx from:

      Origin:   $URL: https://sbia-svn.uphs.upenn.edu/projects/DRAMMS/branches/dramms-1.4/doc/tools/ravens.rst $
      Revision: $Rev: 1954 $

   ============================================================================

   -->

.. title:: Calculate RAVENS Maps from DRAMMS Deformations

.. role:: red

Calculate RAVENS Tissue Density Map
======================================

RAVENS maps are tissue density maps. They are always defined in the target image space. The RAVENS value at a
voxel encodes how many times of volume has been deformed from the source image to the target image at this voxel. In other words, the RAVENS value records *volumetric change ratio* (subject:template). 

The differences from Jacobian Determinants are: 

1) RAVENS values are never negative, regardless of the existence of deformation self-foldings; therefore 

2) unlike Jacobian Determinant maps, RAVENS maps are volume-preserving; and also
 
3) RAVENS maps are localized -- we usually calculate one RAVENS map per ROI
   (hence, RAVENS calculation needs ROI masks, or label maps).

There are two ways to calculate RAVENS maps --- a stand-alone command, or as part of the main ``dramms`` script.


Option 1: using a stand-alone command
--------------------------------------

The first option is via a stand-alone command named ``dramms-ravens``. We recommend this option if you have already obtained a deformation. ::

    dramms-ravens <labelImage> <templateImage> <DefField> <RAVENS_prefix> -m <int>[,<int>...]

Required arguments::

      <labelImage>      : label image in the subject space, must be in the byte (aka uchar, uint8) datatype.
      <templateImage>   : template image, where RAVENS map will reside.
      <DefField>        : deformation field (generated when registering template to subject image).
      <RAVENS_prefix>   : prefix for all RAVENS maps.
      -m <int>[,<int>...]   : labels of up to 5 ROIs where RAVENS maps will be calculated (we will output one RAVENS map for each ROI).

Optional arguments::

      -f <int>          : scale factor (default: 1000)
      -h                : help; usage of this program.

	  
.. raw:: html

    <br />
	
  
Option 2: using the main ``dramms`` command
--------------------------------------------

The second option is suitable if you have no deformation yet, but want to output RAVENS maps during (or more precisely, right after)
calculating the deformation. In other words, users may only have two input images, and the label map in the source image space. From these, users may want to calculate the RAVENS maps in one step. 



In this case, RAVENS maps can be calculated using the ``-R``, ``-L`` and ``-l`` options of ``dramms``. **Please note**: :red:`the registered image is in the source space; and the RAVENS maps are in the target space.` See the figure and the `note` box below. ::

    dramms -S source.hdr       -T target.hdr 
           -O trg2src.hdr      -D def_trg2src.nii.gz 
           -R prefix_ravens_inTargetSpace
           -L labelsrc.hdr     -l 10,150,250

- The ``-R`` argument specifies the prefix of the output RAVENS maps. The eventual output will be ${prefix}_${label1}.nii.gz, ${prefix}_${label2}.nii.gz, ..., where ${label1}, ${label2}, ..., are given by the ``-l`` argument as explained below.

- The ``-L`` argument specifies the input label image or ROI image in the source image space. For example, ``-L labelsrc.hdr`` inputs a label image where, say, white matter region is labeled as 250, gray matter is labeled as 150, and CSF as 10. Please note that the input label image must be in the byte (aka. uchar or uint8) datatype.

- The ``-l`` argument specifies the labels of the regions in which RAVENS maps will be calculated. For example, ``-l 10,150,150`` results in the computation of three RAVENS maps, one for each region labeled by 10, 150, 250 in ``labelsrc.hdr``. Up to 5 labels can be specified at a time.


Fig. figRAVENS_ shows input and output results in this example. With this command, there will be 3 output RAVENS maps in template space: 

  *prefix_ravens_inTargetSpace_10.nii.gz*, 
  
  *prefix_ravens_inTargetSpace_150.nii.gz*, 
  
  *prefix_ravens_inTargetSpace_250.nii.gz*. 



.. _figRAVENS:

.. only:: html
    
    .. figure::   CalculateRAVENS.png
       :alt:      Example: calculate RAVENS maps.
       :align:    center
       :width:    86%
       :figwidth: 86%

       An example of how to use ``dramms`` main script to calculate RAVENS maps.
	   
.. only:: latex
    
    .. figure::   CalculateRAVENS.png
       :alt:      Example: calculate RAVENS maps.
       :align:    center
       :width:    60%
       :figwidth: 60%

       An example of how to use ``dramms`` main script to calculate RAVENS maps.

.. raw:: html

    <br />
    <br />

.. note::

   1. RAVENS calculation requires a label image, because RAVENS is usually region/structure-specific. The label image must have the uchar (aka. byte or uint8) datatype (other input images can be in any datatype).
   
   2. RAVENS values are multiplied by a factor (default 1000) to enhance contrast.
   
   3. RAVENS maps are saved in signed short datatype.

   4. RAVENS maps are in the template/target image space. However, the registered image is in the subject/source space (:red:`we are registering the target image to the source image, in order to result in RAVENS maps in the target image space`). See the figure above.


.. raw:: latex

    \clearpage
